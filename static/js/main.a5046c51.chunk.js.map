{"version":3,"sources":["components/PostsList.tsx","components/Loader/Loader.tsx","components/NewCommentForm.tsx","utils/fetchClient.ts","api/comments.ts","components/PostDetails.tsx","components/UserSelector.tsx","App.tsx","api/users.ts","api/posts.ts","index.tsx"],"names":["PostsList","_ref","posts","selectedPost","selectPost","_jsxs","children","_jsx","className","map","post","id","title","type","classNames","onClick","toggleSelectedPostHandler","Loader","NewCommentForm","addComment","postId","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","text","setText","_useState7","_useState8","isNameError","setNameError","_useState9","_useState10","isEmailError","setEmailError","_useState11","_useState12","isTextError","setTextError","_useState13","_useState14","loading","setLoading","onSubmitHandler","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","wrap","_context","prev","next","preventDefault","trim","abrupt","finish","stop","_x","apply","arguments","onSubmit","htmlFor","placeholder","value","onChange","target","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","length","undefined","data","options","body","JSON","stringify","headers","then","fetch","response","json","client","createComment","PostDetails","comments","setComments","isError","setIsError","formIsActive","setFormIsActive","useEffect","concat","catch","finally","deleteCommentHandler","useCallback","commentId","deleteComment","currentComments","filter","currComment","newComment","_toConsumableArray","error","_x2","_x3","_x4","_Fragment","comment","href","UserSelector","users","selectUser","selectedUser","dropDownActive","setDropDownActive","role","user","selectUserHandler","App","setUsers","isUserError","setIsUserError","setSelectedUser","setPosts","setSelectedPost","userId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5046c51.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Post } from '../types/Post';\n\ntype Props = {\n  posts: Post[];\n  selectedPost: Post | null;\n  selectPost: (post: Post | null) => void;\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  selectedPost,\n  selectPost,\n}) => {\n  const toggleSelectedPostHandler = (post: Post) => {\n    if (post.id === selectedPost?.id) {\n      selectPost(null);\n    } else {\n      selectPost(post);\n    }\n  };\n\n  return (\n    <div data-cy=\"PostsList\">\n      <p className=\"title\">Posts:</p>\n\n      <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n        <thead>\n          <tr className=\"has-background-link-light\">\n            <th>#</th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {\n            posts.map(post => (\n              <tr data-cy=\"Post\" key={post.id}>\n                <td data-cy=\"PostId\">{post.id}</td>\n\n                <td data-cy=\"PostTitle\">\n                  {post.title}\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    type=\"button\"\n                    data-cy=\"PostButton\"\n                    className={classNames('button is-link', {\n                      'is-light': post.id !== selectedPost?.id,\n                    })}\n                    onClick={() => toggleSelectedPostHandler(post)}\n                  >\n                    {post.id !== selectedPost?.id ? 'Open' : 'Close'}\n                  </button>\n                </td>\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  addComment: (\n    email: string,\n    body: string,\n    name: string,\n    postId: number,\n  ) => Promise<void>;\n  postId: number;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ addComment, postId }) => {\n  const [name, setName] = useState<string>('');\n  const [email, setEmail] = useState<string>('');\n  const [text, setText] = useState<string>('');\n\n  const [isNameError, setNameError] = useState<boolean>(false);\n  const [isEmailError, setEmailError] = useState<boolean>(false);\n  const [isTextError, setTextError] = useState<boolean>(false);\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const changNameHandler = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setName(event.target.value);\n    setNameError(false);\n  };\n\n  const changEmailHandler = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setEmail(event.target.value);\n    setEmailError(false);\n  };\n\n  const changTextHandler = (\n    event: React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    setText(event.target.value);\n    setTextError(false);\n  };\n\n  const onSubmitHandler = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!name.trim()) {\n      setNameError(true);\n    }\n\n    if (!email.trim()) {\n      setEmailError(true);\n    }\n\n    if (!text.trim()) {\n      setTextError(true);\n    }\n\n    if (!name.trim() || !email.trim() || !text.trim()) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      await addComment(email, text, name, postId);\n    } finally {\n      setLoading(false);\n      setText('');\n    }\n  };\n\n  const resetFields = () => {\n    setName('');\n    setEmail('');\n    setText('');\n\n    setNameError(false);\n    setEmailError(false);\n    setTextError(false);\n  };\n\n  return (\n    <form data-cy=\"NewCommentForm\" onSubmit={onSubmitHandler}>\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={classNames('input', {\n              'is-danger': isNameError,\n            })}\n            value={name}\n            onChange={changNameHandler}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {isNameError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {isNameError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Name is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={classNames('input', {\n              'is-danger': isEmailError,\n            })}\n            value={email}\n            onChange={changEmailHandler}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {isEmailError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {isEmailError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Email is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={classNames('textarea', {\n              'is-danger': isTextError,\n            })}\n            value={text}\n            onChange={changTextHandler}\n          />\n        </div>\n\n        {isTextError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className={classNames('button is-link', {\n              'is-loading': loading,\n            })}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button\n            type=\"reset\"\n            className=\"button is-link is-light\"\n            onClick={resetFields}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { Comment } from '../types/Comment';\nimport { client } from '../utils/fetchClient';\n\nexport const getComments = (postId: number) => {\n  return client.get<Comment[]>(`/comments?postId=${postId}`);\n};\n\nexport const createComment = (\n  {\n    email,\n    name,\n    postId,\n    body,\n  }: Omit<Comment, 'id'>,\n) => {\n  return client.post<Comment>('/comments', {\n    email, name, postId, body,\n  });\n};\n\nexport const deleteComment = (commentId: number) => {\n  return client.delete(`/comments/${commentId}`);\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Loader } from './Loader';\nimport { NewCommentForm } from './NewCommentForm';\nimport { Post } from '../types/Post';\nimport { createComment, deleteComment, getComments } from '../api/comments';\nimport { Comment } from '../types/Comment';\n\ntype Props = {\n  post: Post,\n};\n\nexport const PostDetails: React.FC<Props> = ({ post }) => {\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [formIsActive, setFormIsActive] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getComments(post.id)\n      .then(setComments)\n      .catch(() => setIsError(true))\n      .finally(() => setLoading(false));\n  }, [post]);\n\n  const toggleFormActive = () => setFormIsActive(true);\n\n  const deleteCommentHandler = useCallback((commentId: number) => {\n    deleteComment(commentId)\n      .then(() => setComments(currentComments => currentComments\n        .filter(currComment => currComment.id !== commentId)))\n      .catch(() => { });\n  }, []);\n\n  const addComment = useCallback(async (\n    email: string,\n    body: string,\n    name: string,\n    postId: number,\n  ) => {\n    const newComment: Omit<Comment, 'id'> = {\n      email,\n      body,\n      name,\n      postId,\n    };\n\n    return createComment(newComment)\n      .then(currComment => {\n        setComments(currentComments => [...currentComments, currComment]);\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }, []);\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {`#${post?.id}: ${post?.title}`}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {post.body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          {loading\n            ? <Loader />\n            : (\n              <>\n                {isError && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"CommentsError\"\n                  >\n                    Something went wrong\n                  </div>\n                )}\n\n                {!isError && comments.length === 0 && (\n                  <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n                    No comments yet\n                  </p>\n                )}\n\n                {!isError && comments.length !== 0 && (\n                  <>\n                    <p className=\"title is-4\">Comments:</p>\n\n                    {\n                      comments.map(comment => (\n                        <article className=\"message is-small\" data-cy=\"Comment\">\n                          <div className=\"message-header\">\n                            <a\n                              href={`mailto:${comment.email}`}\n                              data-cy=\"CommentAuthor\"\n                            >\n                              {comment.name}\n                            </a>\n                            <button\n                              data-cy=\"CommentDelete\"\n                              type=\"button\"\n                              className=\"delete is-small\"\n                              aria-label=\"delete\"\n                              onClick={() => deleteCommentHandler(comment.id)}\n                            >\n                              delete button\n                            </button>\n                          </div>\n\n                          <div className=\"message-body\" data-cy=\"CommentBody\">\n                            {comment.body}\n                          </div>\n                        </article>\n\n                      ))\n                    }\n\n                    {!formIsActive && (\n                      <button\n                        data-cy=\"WriteCommentButton\"\n                        type=\"button\"\n                        className=\"button is-link\"\n                        onClick={toggleFormActive}\n                      >\n                        Write a comment\n                      </button>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n        </div>\n\n        {formIsActive\n          && (\n            <NewCommentForm\n              addComment={addComment}\n              postId={post.id}\n            />\n          )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { User } from '../types/User';\n\ntype Props = {\n  users: User[];\n  selectUser: (user: User) => void;\n  selectedUser: User | null;\n};\n\nexport const UserSelector: React.FC<Props> = (\n  {\n    users,\n    selectUser,\n    selectedUser,\n  },\n) => {\n  const [dropDownActive, setDropDownActive] = useState(false);\n\n  const toggleDropdown = () => setDropDownActive(prev => !prev);\n  const selectUserHandler = (user: User) => {\n    selectUser(user);\n    setDropDownActive(false);\n  };\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className={classNames('dropdown', {\n        'is-active': dropDownActive,\n      })}\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={toggleDropdown}\n          // onBlur={() => setDropDownActive(false)}\n        >\n          <span>\n            {selectedUser?.name || 'Choose a user'}\n          </span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {\n            users.map(user => (\n              <a\n                key={user.id}\n                href={`#user-${user.id}`}\n                className={classNames('dropdown-item', {\n                  'is-active': user.id === selectedUser?.id,\n                })}\n                onClick={() => selectUserHandler(user)}\n              >\n                {user.name}\n              </a>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { Loader } from './components/Loader';\nimport { User } from './types/User';\nimport { getUsers } from './api/users';\nimport { Post } from './types/Post';\nimport { getPosts } from './api/posts';\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [isUserError, setIsUserError] = useState(false);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n    getUsers()\n      .then(setUsers)\n      .catch(() => setIsUserError(true))\n      .finally(() => setLoading(false));\n  }, []);\n\n  useEffect(() => {\n    setLoading(true);\n    if (selectedUser) {\n      getPosts(selectedUser.id)\n        .then(setPosts)\n        .finally(() => setLoading(false));\n    }\n  }, [selectedUser]);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  users={users}\n                  selectUser={setSelectedUser}\n                  selectedUser={selectedUser}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                {\n                  !selectedUser\n                  && (\n                    <p data-cy=\"NoSelectedUser\">\n                      No user selected\n                    </p>\n                  )\n                }\n\n                {\n                  loading\n                    ? <Loader />\n                    : (\n                      <>\n                        {\n                          isUserError\n                          && (\n                            <div\n                              className=\"notification is-danger\"\n                              data-cy=\"PostsLoadingError\"\n                            >\n                              Something went wrong!\n                            </div>\n                          )\n                        }\n                      </>\n                    )\n                }\n\n                {!loading && posts.length === 0 && selectedUser && (\n                  <div className=\"notification is-warning\" data-cy=\"NoPostsYet\">\n                    No posts yet\n                  </div>\n                )}\n\n                {!loading && posts.length !== 0 && selectedUser && (\n                  <PostsList\n                    posts={posts}\n                    selectedPost={selectedPost}\n                    selectPost={setSelectedPost}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={classNames(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              {\n                'Sidebar--open': selectedPost,\n              },\n            )}\n          >\n            <div className=\"tile is-child box is-success \">\n              {selectedPost && <PostDetails post={selectedPost} />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUsers = () => {\n  return client.get<User[]>('/users');\n};\n","import { Post } from '../types/Post';\nimport { client } from '../utils/fetchClient';\n\nexport const getPosts = (userId: number) => {\n  return client.get<Post[]>(`/posts?userId=${userId}`);\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}